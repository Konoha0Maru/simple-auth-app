{"version":3,"sources":["layouts/navigation/AppDrawer.tsx","layouts/alert/AlertItem.tsx","layouts/alert/Alert.tsx","layouts/AppLoader.tsx","components/routing/AdminRoute.tsx","components/routing/PrivateRoute.tsx","components/routing/GuestRoute.tsx","constant/routesProps.ts","components/routing/Routes.tsx","App.tsx","redux/reducers/admin.ts","redux/reducers/user.ts","redux/reducers/alert.ts","redux/reducers/index.ts","redux/store.ts","index.tsx","redux/actions/alert.ts","utils/headers.ts","redux/actions/admin.ts","redux/actions/user.ts","redux/actions/types.ts"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","menuButtonClose","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","children","classes","history","useHistory","dispatch","useDispatch","React","useState","open","setOpen","user","useSelector","state","admin","topLinks","isAuthenticated","role","ListItem","button","onClick","e","push","ListItemIcon","ListItemText","primary","bottomLinks","logOutUser","logOutAdmin","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","edge","Typography","variant","noWrap","Drawer","anchor","paper","Divider","List","AlertItem","data","severity","alertType","onClose","removeAlert","id","msg","alertWrapper","bottom","right","flexDirection","gap","Alert","alerts","alert","length","map","top","left","height","displayDirection","AppLoader","CircularProgress","AdminRoute","Component","component","rest","render","props","loading","to","PrivateRoute","GuestRoute","routesProps","name","path","lazy","exact","auth","Routes","renderRoutes","RoutesProps","routeProp","key","localStorage","admin__token","setAdminAuthToken","user__token","setUserAuthToken","App","useEffect","loadUser","loadAdmin","AppDrawer","initialState","token","getItem","users","adminReducer","action","type","types","ADMIN_LOADED","payload","ADMIN_LOGIN_SUCCESS","setItem","GET_USERS","DELETE_USER","filter","_id","UPDATE_USER","ADMIN_LOGIN_FAIL","ADMIN_AUTH_ERROR","ADMIN_LOGOUT","removeItem","userReducer","USER_LOADED","USER_REGISTER_SUCCESS","USER_LOGIN_SUCCESS","USER_REGISTER_FAIL","USER_LOGIN_FAIL","USER_AUTH_ERROR","USER_LOGOUT","alertReducer","SET_ALERT","REMOVE_ALERT","rootReducer","combineReducers","middleware","thunk","store","createStore","rootR","composeWithDevTools","applyMiddleware","ReactDOM","StrictMode","Suspense","fallback","Store","document","getElementById","setAlert","v4","status","setTimeout","axios","defaults","headers","URI","a","config","header","get","loginAsAdmin","body","setSubmitting","post","response","getUsers","updateUser","patch","deleteUser","delete","loginUser","registerUser","ActionTypes"],"mappings":"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","file":"static/js/main.baecdc80.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\n\r\nimport { logOutUser } from \"redux/actions/user\";\r\nimport { logOutAdmin } from \"redux/actions/admin\";\r\nimport { RootState } from \"redux/reducers\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  menuButtonClose: {\r\n    marginLeft: theme.spacing(0),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  children: JSX.Element;\r\n};\r\n\r\nconst PersistentDrawerLeft: React.FC<Props> = ({ children }): JSX.Element => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n  const user = useSelector((state: RootState) => state.user);\r\n  const admin = useSelector((state: RootState) => state.admin);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const topLinks =\r\n    user.isAuthenticated && user.user.role === \"user\" ? (\r\n      <ListItem\r\n        button\r\n        key='dashboard'\r\n        onClick={(e) => history.push(\"/dashboard\")}\r\n      >\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary='Dashboard' />\r\n      </ListItem>\r\n    ) : admin.isAuthenticated && admin.admin.role === \"admin\" ? (\r\n      <ListItem button key='users' onClick={(e) => history.push(\"/users\")}>\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary='Users' />\r\n      </ListItem>\r\n    ) : null;\r\n\r\n  const bottomLinks = user.isAuthenticated ? (\r\n    <ListItem button key='logout' onClick={(e) => dispatch(logOutUser())}>\r\n      <ListItemIcon>\r\n        <ExitToAppIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary='Logout' />\r\n    </ListItem>\r\n  ) : admin.isAuthenticated ? (\r\n    <ListItem button key='logout' onClick={(e) => dispatch(logOutAdmin())}>\r\n      <ListItemIcon>\r\n        <ExitToAppIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary='Logout' />\r\n    </ListItem>\r\n  ) : (\r\n    <>\r\n      <ListItem\r\n        button\r\n        key='register'\r\n        onClick={(e) => history.push(\"/register\")}\r\n      >\r\n        <ListItemIcon>\r\n          <LockOpenIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary='Register' />\r\n      </ListItem>\r\n      <ListItem button key='login' onClick={(e) => history.push(\"/\")}>\r\n        <ListItemIcon>\r\n          <VpnKeyIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary='Login' />\r\n      </ListItem>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position='fixed'\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n            onClick={handleDrawerOpen}\r\n            edge='start'\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant='h6' noWrap>\r\n            Simple Auth\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant='persistent'\r\n        anchor='left'\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton\r\n            color='inherit'\r\n            aria-label='close drawer'\r\n            onClick={handleDrawerClose}\r\n            edge='start'\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open ? classes.menuButtonClose : classes.hide\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{topLinks}</List>\r\n        {topLinks ? <Divider /> : null}\r\n        <List>{bottomLinks}</List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersistentDrawerLeft;\r\n","import React from \"react\";\r\nimport { Alert as MatAlert } from \"@material-ui/lab\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removeAlert } from \"redux/actions/alert\";\r\nimport { IAlertState } from \"redux/types/alert\";\r\n\r\ntype Props = {\r\n  data: IAlertState;\r\n};\r\n\r\nconst AlertItem: React.FC<Props> = ({ data }): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <MatAlert\r\n      variant='filled'\r\n      severity={data.alertType}\r\n      onClose={() => dispatch(removeAlert(data.id))}\r\n    >\r\n      {data.msg}\r\n    </MatAlert>\r\n  );\r\n};\r\n\r\nexport default AlertItem;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\n\r\nimport AlertItem from \"./AlertItem\";\r\nimport { RootState } from \"redux/reducers\";\r\nimport { IAlertState } from \"redux/types/alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  alertWrapper: {\r\n    position: \"absolute\",\r\n    bottom: \"5rem\",\r\n    right: \"2rem\",\r\n    width: \"20%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \".5rem\",\r\n  },\r\n}));\r\n\r\nconst Alert: React.FC = (): JSX.Element | null => {\r\n  const classes = useStyles();\r\n  const alerts = useSelector((state: RootState) => state.alert);\r\n\r\n  return alerts.length ? (\r\n    <div className={clsx(classes.alertWrapper)}>\r\n      {alerts.map((alert: IAlertState) => (\r\n        <AlertItem data={alert} key={alert.id} />\r\n      ))}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    displayDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst AppLoader: React.FC = (): JSX.Element => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppLoader;\r\n","import React from \"react\";\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport AppLoader from \"layouts/AppLoader\";\r\nimport { RootState } from \"redux/reducers\";\r\n\r\ntype Props = {\r\n  component: React.ComponentType<RouteProps>;\r\n};\r\n\r\nconst AdminRoute: React.FC<Props> = ({\r\n  component: Component,\r\n  ...rest\r\n}): JSX.Element => {\r\n  const user = useSelector((state: RootState) => state.user);\r\n  const admin = useSelector((state: RootState) => state.admin);\r\n\r\n  return (\r\n    <Route\r\n      render={(props) => {\r\n        if (admin.loading) {\r\n          return <AppLoader />;\r\n        }\r\n        if (!admin.isAuthenticated) {\r\n          return <Redirect to='/' />;\r\n        }\r\n        if (user.isAuthenticated && user.user.role === \"user\") {\r\n          return <Redirect to='/dashboard' />;\r\n        }\r\n        if (admin.isAuthenticated && admin.admin.role === \"admin\") {\r\n          return <Component {...props} />;\r\n        }\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AdminRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport AppLoader from \"layouts/AppLoader\";\r\nimport { RootState } from \"redux/reducers\";\r\n\r\ntype Props = {\r\n  component: React.ComponentType<RouteProps>;\r\n};\r\n\r\nconst PrivateRoute: React.FC<Props> = ({\r\n  component: Component,\r\n  ...rest\r\n}): JSX.Element => {\r\n  const user = useSelector((state: RootState) => state.user);\r\n  const admin = useSelector((state: RootState) => state.admin);\r\n\r\n  return (\r\n    <Route\r\n      render={(props) => {\r\n        if (user.loading) {\r\n          return <AppLoader />;\r\n        }\r\n        if (!user.isAuthenticated) {\r\n          return <Redirect to='/' />;\r\n        }\r\n        if (admin.isAuthenticated && admin.admin.role === \"admin\") {\r\n          return <Redirect to='/users' />;\r\n        }\r\n        if (user.isAuthenticated && user.user.role === \"user\") {\r\n          return <Component {...props} />;\r\n        }\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport AppLoader from \"layouts/AppLoader\";\r\nimport { RootState } from \"redux/reducers\";\r\n\r\ntype Props = {\r\n  component: React.ComponentType<RouteProps>;\r\n};\r\n\r\nconst GuestRoute: React.FC<Props> = ({\r\n  component: Component,\r\n  ...rest\r\n}): JSX.Element => {\r\n  const user = useSelector((state: RootState) => state.user);\r\n  const admin = useSelector((state: RootState) => state.admin);\r\n\r\n  return (\r\n    <Route\r\n      render={(props) => {\r\n        if (user.loading || admin.loading) {\r\n          return <AppLoader />;\r\n        } else if (user.isAuthenticated && user.user.role === \"user\") {\r\n          return <Redirect to='/dashboard' />;\r\n        } else if (admin.isAuthenticated && admin.admin.role === \"admin\") {\r\n          return <Redirect to='/users' />;\r\n        } else {\r\n          return <Component {...props} />;\r\n        }\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GuestRoute;\r\n","import React from \"react\";\r\n\r\ntype ROUTES = {\r\n  name: string;\r\n  path: string;\r\n  component: React.FC;\r\n  exact?: boolean;\r\n  role?: string;\r\n  auth?: boolean;\r\n};\r\n\r\nconst routesProps: ROUTES[] = [\r\n  {\r\n    name: \"login\",\r\n    path: \"/\",\r\n    component: React.lazy(() => import(\"pages/auth/Login\")),\r\n    exact: true,\r\n    role: \"guest\",\r\n    auth: false,\r\n  },\r\n  {\r\n    name: \"register\",\r\n    path: \"/register\",\r\n    component: React.lazy(() => import(\"pages/auth/Register\")),\r\n    exact: true,\r\n    role: \"guest\",\r\n    auth: false,\r\n  },\r\n  {\r\n    name: \"dashboard\",\r\n    path: \"/dashboard\",\r\n    component: React.lazy(() => import(\"pages/dashboard/Dashboard\")),\r\n    exact: true,\r\n    role: \"user\",\r\n    auth: true,\r\n  },\r\n  {\r\n    name: \"users\",\r\n    path: \"/users\",\r\n    component: React.lazy(() => import(\"pages/admin/Users\")),\r\n    exact: true,\r\n    role: \"admin\",\r\n    auth: true,\r\n  },\r\n  {\r\n    name: \"notfound\",\r\n    path: \"*\",\r\n    component: React.lazy(() => import(\"pages/not-found/NotFound\")),\r\n  },\r\n];\r\n\r\nexport default routesProps;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport AdminRoute from \"./AdminRoute\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport GuestRoute from \"./GuestRoute\";\r\n\r\nimport RoutesProps from \"constant/routesProps\";\r\n\r\nconst Routes: React.FC = (): JSX.Element => {\r\n  const renderRoutes = RoutesProps?.map((routeProp, key) => {\r\n    if (!routeProp.auth && routeProp.role === \"guest\") {\r\n      return <GuestRoute {...routeProp} key={`guest__route__${key}`} />;\r\n    }\r\n    if (routeProp.auth && routeProp.role === \"user\") {\r\n      return <PrivateRoute {...routeProp} key={`private__route__${key}`} />;\r\n    }\r\n    if (routeProp.auth && routeProp.role === \"admin\") {\r\n      return <AdminRoute {...routeProp} key={`admin__route__${key}`} />;\r\n    }\r\n    return <Route {...routeProp} key={`notfound__route__${key}`} />;\r\n  });\r\n\r\n  return <Switch>{renderRoutes}</Switch>;\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport AppDrawer from \"layouts/navigation/AppDrawer\";\r\nimport Alert from \"layouts/alert/Alert\";\r\nimport Routes from \"components/routing/Routes\";\r\n\r\nimport { setAdminAuthToken, setUserAuthToken } from \"utils/headers\";\r\nimport { loadUser } from \"redux/actions/user\";\r\nimport { loadAdmin } from \"redux/actions/admin\";\r\n\r\nif (localStorage.admin__token) setAdminAuthToken(localStorage.admin__token);\r\nif (localStorage.user__token) setUserAuthToken(localStorage.user__token);\r\n\r\nconst App: React.FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => dispatch<any>(loadUser()), [dispatch]);\r\n  React.useEffect(() => dispatch<any>(loadAdmin()), [dispatch]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <AppDrawer>\r\n        <div className='app'>\r\n          <Routes />\r\n          <Alert />\r\n        </div>\r\n      </AppDrawer>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import types from \"redux/actions/types\";\r\nimport { IAdmin } from \"redux/types/admin\";\r\nimport { IUser } from \"redux/types/user\";\r\nimport { IAdminState, AdminActions } from \"../types/admin\";\r\n\r\nconst initialState: IAdminState = {\r\n  token: localStorage.getItem(\"admin__token\"),\r\n  loading: true,\r\n  isAuthenticated: null,\r\n  admin: {} as IAdmin,\r\n  users: [] as IUser[],\r\n};\r\n\r\nconst adminReducer = (\r\n  state = initialState,\r\n  action: AdminActions\r\n): IAdminState => {\r\n  switch (action.type) {\r\n    case types.ADMIN_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        admin: action.payload,\r\n      };\r\n\r\n    case types.ADMIN_LOGIN_SUCCESS:\r\n      localStorage.setItem(\"admin__token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case types.GET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n\r\n    case types.DELETE_USER:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user._id !== action.payload),\r\n      };\r\n\r\n    case types.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) =>\r\n          user._id === action.payload.id ? { ...action.payload.user } : user\r\n        ),\r\n      };\r\n\r\n    case types.ADMIN_LOGIN_FAIL:\r\n    case types.ADMIN_AUTH_ERROR:\r\n    case types.ADMIN_LOGOUT:\r\n      localStorage.removeItem(\"admin__token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        admin: {} as IAdmin,\r\n        users: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminReducer;\r\n","import types from \"redux/actions/types\";\r\nimport { IUserState, UserActions } from \"../types/user\";\r\nimport { IUser } from \"redux/types/user\";\r\n\r\nconst initialState: IUserState = {\r\n  token: localStorage.getItem(\"user__token\"),\r\n  loading: true,\r\n  isAuthenticated: null,\r\n  user: {} as IUser,\r\n};\r\n\r\nconst userReducer = (state = initialState, action: UserActions): IUserState => {\r\n  switch (action.type) {\r\n    case types.USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n\r\n    case types.USER_REGISTER_SUCCESS:\r\n    case types.USER_LOGIN_SUCCESS:\r\n      localStorage.setItem(\"user__token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case types.USER_REGISTER_FAIL:\r\n    case types.USER_LOGIN_FAIL:\r\n    case types.USER_AUTH_ERROR:\r\n    case types.USER_LOGOUT:\r\n      localStorage.removeItem(\"user__token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: {} as IUser,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import types from \"redux/actions/types\";\r\nimport { IAlertState, AlertActions } from \"redux/types/alert\";\r\n\r\nconst initialState: IAlertState[] = [];\r\n\r\nconst alertReducer = (\r\n  state = initialState,\r\n  action: AlertActions\r\n): IAlertState[] => {\r\n  switch (action.type) {\r\n    case types.SET_ALERT:\r\n      return [...state, action.payload];\r\n\r\n    case types.REMOVE_ALERT:\r\n      return state.filter((alert: IAlertState) => alert.id !== action.payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default alertReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport admin from \"./admin\";\r\nimport user from \"./user\";\r\nimport alert from \"./alert\";\r\n\r\nconst rootReducer = combineReducers({\r\n  admin,\r\n  user,\r\n  alert,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootR from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootR,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"App\";\r\nimport \"index.css\";\r\nimport Store from \"./redux/store\";\r\nimport AppLoader from \"layouts/AppLoader\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <React.Suspense fallback={<AppLoader />}>\r\n      <Provider store={Store}>\r\n        <App />\r\n      </Provider>\r\n    </React.Suspense>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"simple__auth\")\r\n);\r\n","import { Dispatch } from \"redux\";\r\nimport { v4 } from \"uuid\";\r\nimport types from \"./types\";\r\nimport { IAlertState, AlertActions } from \"redux/types/alert\";\r\n\r\nexport const setAlert =\r\n  (data: IAlertState) => (dispatch: Dispatch<AlertActions>) => {\r\n    const id = v4();\r\n    const { msg, status, alertType } = data;\r\n\r\n    // DISPATCH SET ALERT\r\n    dispatch({\r\n      type: types.SET_ALERT,\r\n      payload: { id, msg, status, alertType },\r\n    });\r\n\r\n    // DISPATCH REMOVE ALERT\r\n    setTimeout(() => {\r\n      dispatch({ type: types.REMOVE_ALERT, payload: id });\r\n    }, 4000);\r\n  };\r\n\r\nexport const removeAlert = (id: number) => (dispatch: Dispatch<AlertActions>) =>\r\n  dispatch({ type: types.REMOVE_ALERT, payload: id });\r\n","import axios from \"axios\";\r\n\r\nexport const setUserAuthToken = (token: string): void => {\r\n  if (token) {\r\n    axios.defaults.headers[\"x-user-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers[\"x-user-auth-token\"];\r\n  }\r\n};\r\n\r\nexport const setAdminAuthToken = (token: string): void => {\r\n  if (token) {\r\n    axios.defaults.headers[\"x-admin-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers[\"x-admin-auth-token\"];\r\n  }\r\n};\r\n\r\nexport const setHeader = () => ({\r\n  header: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { setAdminAuthToken } from \"utils/headers\";\r\nimport { setAlert } from \"./alert\";\r\nimport { AdminActions } from \"redux/types/admin\";\r\nimport { AlertActions } from \"redux/types/alert\";\r\nimport types from \"./types\";\r\n\r\nconst URI = \"http://localhost:5000/api/v1/admin\";\r\n\r\n// LOAD ADMIN\r\nexport const loadAdmin = () => async (dispatch: Dispatch<AdminActions>) => {\r\n  if (localStorage.admin__token) setAdminAuthToken(localStorage.admin__token);\r\n\r\n  const config: any = {\r\n    header: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const { data } = await axios.get(`${URI}/auth-admin`, config);\r\n\r\n    dispatch({ type: types.ADMIN_LOADED, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: types.ADMIN_AUTH_ERROR });\r\n  }\r\n};\r\n\r\n// LOGIN ADMIN\r\nexport const loginAsAdmin =\r\n  (body: any, setSubmitting: any) =>\r\n  async (dispatch: Dispatch<AdminActions | AlertActions>) => {\r\n    const config: any = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(`${URI}/login`, body, config);\r\n      dispatch({\r\n        type: types.ADMIN_LOGIN_SUCCESS,\r\n        payload: data,\r\n      });\r\n      dispatch<any>(\r\n        setAlert({\r\n          msg: \"Admin Login Successful!\",\r\n          status: 200,\r\n          alertType: \"success\",\r\n        })\r\n      );\r\n      dispatch<any>(loadAdmin());\r\n    } catch (error: any) {\r\n      dispatch({ type: types.ADMIN_LOGIN_FAIL });\r\n      dispatch<any>(\r\n        setAlert({\r\n          msg: error.response.data,\r\n          status: error.response.status,\r\n          alertType: \"error\",\r\n        })\r\n      );\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n// GET USERS\r\nexport const getUsers =\r\n  () => async (dispatch: Dispatch<AdminActions | AlertActions>) => {\r\n    const config: any = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`${URI}/users`, config);\r\n      dispatch({ type: types.GET_USERS, payload: data });\r\n    } catch (error: any) {\r\n      dispatch<any>(\r\n        setAlert({\r\n          msg: \"Something went wrong when fetching the users!\",\r\n          status: error.response.status,\r\n          alertType: \"error\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n// UPDATE USER DATA\r\nexport const updateUser =\r\n  (body: any, id: number, setSubmitting: any) =>\r\n  async (dispatch: Dispatch<AdminActions | AlertActions>) => {\r\n    const config: any = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.patch(`${URI}/users/${id}`, body, config);\r\n      dispatch({\r\n        type: types.UPDATE_USER,\r\n        payload: data,\r\n      });\r\n      dispatch<any>(getUsers());\r\n      dispatch<any>(\r\n        setAlert({\r\n          msg: \"User Data Updated!\",\r\n          status: 200,\r\n          alertType: \"success\",\r\n        })\r\n      );\r\n    } catch (error: any) {\r\n      dispatch<any>(\r\n        setAlert({\r\n          msg: \"Something went wrong when updating the users!\",\r\n          status: error.response.status,\r\n          alertType: \"error\",\r\n        })\r\n      );\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n// DELETE USER\r\nexport const deleteUser =\r\n  (id: number) => async (dispatch: Dispatch<AdminActions | AlertActions>) => {\r\n    const config: any = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.delete(`${URI}/users/${id}`, config);\r\n      dispatch({ type: types.DELETE_USER, payload: id });\r\n      dispatch<any>(\r\n        setAlert({\r\n          msg: \"User has been deleted!\",\r\n          status: 200,\r\n          alertType: \"success\",\r\n        })\r\n      );\r\n    } catch (error: any) {\r\n      dispatch<any>(\r\n        setAlert({\r\n          msg: \"Something went wrong when deleting the users!\",\r\n          status: error.response.status,\r\n          alertType: \"error\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n// LOGOUT ADMIN\r\nexport const logOutAdmin =\r\n  () => (dispatch: Dispatch<AdminActions | AlertActions>) => {\r\n    dispatch({ type: types.ADMIN_LOGOUT });\r\n    dispatch<any>(\r\n      setAlert({\r\n        msg: \"You have logged out!\",\r\n        status: 200,\r\n        alertType: \"success\",\r\n      })\r\n    );\r\n  };\r\n","import { Dispatch } from \"redux\";\r\nimport axios from \"axios\";\r\nimport types from \"./types\";\r\nimport { setUserAuthToken } from \"utils/headers\";\r\nimport { setAlert } from \"./alert\";\r\nimport { UserActions } from \"redux/types/user\";\r\nimport { AlertActions } from \"redux/types/alert\";\r\n\r\nconst URI = \"http://localhost:5000/api/v1/user\";\r\n\r\n// LOAD USER\r\nexport const loadUser = () => async (dispatch: Dispatch<UserActions>) => {\r\n  if (localStorage.user__token) setUserAuthToken(localStorage.user__token);\r\n\r\n  const config: any = {\r\n    header: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const { data } = await axios.get(`${URI}/auth-user`, config);\r\n    dispatch({ type: types.USER_LOADED, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: types.USER_AUTH_ERROR });\r\n  }\r\n};\r\n\r\n// LOGIN USER\r\nexport const loginUser =\r\n  (body: any, setSubmitting: any) =>\r\n  async (dispatch: Dispatch<UserActions | AlertActions>) => {\r\n    const config: any = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(`${URI}/login`, body, config);\r\n      dispatch({\r\n        type: types.USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      });\r\n      dispatch<any>(\r\n        setAlert({\r\n          msg: \"Login Successful!\",\r\n          status: 200,\r\n          alertType: \"success\",\r\n        })\r\n      );\r\n      dispatch<any>(loadUser());\r\n    } catch (error: any) {\r\n      dispatch({ type: types.USER_LOGIN_FAIL });\r\n      dispatch<any>(\r\n        setAlert({\r\n          msg: error.response.data,\r\n          status: error.response.status,\r\n          alertType: \"error\",\r\n        })\r\n      );\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n// REGISTER USER\r\nexport const registerUser =\r\n  (body: any, setSubmitting: any) =>\r\n  async (dispatch: Dispatch<UserActions | AlertActions>) => {\r\n    const config: any = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(`${URI}/register`, body, config);\r\n      dispatch({\r\n        type: types.USER_REGISTER_SUCCESS,\r\n        payload: data,\r\n      });\r\n      dispatch<any>(\r\n        setAlert({\r\n          msg: \"Register successful!\",\r\n          status: 200,\r\n          alertType: \"success\",\r\n        })\r\n      );\r\n      dispatch<any>(loadUser());\r\n    } catch (error: any) {\r\n      dispatch({ type: types.USER_REGISTER_FAIL });\r\n      dispatch<any>(\r\n        setAlert({\r\n          msg: error.response.data,\r\n          status: error.response.status,\r\n          alertType: \"error\",\r\n        })\r\n      );\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n// LOGOUT USER\r\nexport const logOutUser =\r\n  () => (dispatch: Dispatch<UserActions | AlertActions>) => {\r\n    dispatch({ type: types.USER_LOGOUT });\r\n    dispatch<any>(\r\n      setAlert({\r\n        msg: \"You have logged out!\",\r\n        status: 200,\r\n        alertType: \"success\",\r\n      })\r\n    );\r\n  };\r\n","enum ActionTypes {\r\n  SET_ALERT = \"SET_ALERT\",\r\n  REMOVE_ALERT = \"REMOVE_ALERT\",\r\n  USER_LOADED = \"USER_LOADED\",\r\n  USER_AUTH_ERROR = \"USER_AUTH_ERROR\",\r\n  USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\",\r\n  USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\",\r\n  USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\",\r\n  USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\",\r\n  USER_LOGOUT = \"USER_LOGOUT\",\r\n  ADMIN_LOADED = \"ADMIN_LOADED\",\r\n  ADMIN_AUTH_ERROR = \"ADMIN_AUTH_ERROR\",\r\n  ADMIN_LOGIN_SUCCESS = \"ADMIN_LOGIN_SUCCESS\",\r\n  ADMIN_LOGIN_FAIL = \"ADMIN_LOGIN_FAIL\",\r\n  ADMIN_LOGOUT = \"ADMIN_LOGOUT\",\r\n  GET_USERS = \"GET_USERS\",\r\n  UPDATE_USER = \"UPDATE_USER\",\r\n  DELETE_USER = \"DELETE_USER\",\r\n}\r\n\r\nexport default ActionTypes;\r\n"],"sourceRoot":""}