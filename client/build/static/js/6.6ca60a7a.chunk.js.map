{"version":3,"sources":["components/shared/FormField.tsx","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@mui/material/FormControl/FormControlContext.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/FormControl/useFormControl.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","pages/auth/Login.tsx"],"names":["useStyles","makeStyles","theme","formLabel","fontWeight","marginBottom","spacing","formControl","margin","FormField","isRegister","classes","useFormikContext","values","handleChange","handleBlur","errors","touched","fullWidth","className","root","name","value","username","onChange","onBlur","placeholder","helperText","error","Boolean","email","type","password","Card","React","props","ref","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","elevation","withStyles","overflow","CardContent","_props$component","component","Component","padding","paddingBottom","FormControlContext","getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","skipSx","ownerState","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","zIndex","SwitchBase","autoFocus","checkedProp","checked","checkedIcon","defaultChecked","disabledProp","disabled","disableFocusRipple","icon","id","inputProps","inputRef","onFocus","readOnly","required","tabIndex","_objectWithoutPropertiesLoose","useControlled","controlled","default","state","setCheckedState","muiFormControl","hasLabelFor","slots","capitalize","input","composeClasses","useUtilityClasses","_jsxs","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","createSvgIcon","d","getCheckboxUtilityClass","checkboxClasses","CheckboxRoot","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","indeterminate","color","palette","text","secondary","disableRipple","backgroundColor","alpha","action","active","main","hoverOpacity","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","fontSize","flexGrow","minHeight","card","maxWidth","btnLogin","marginTop","checkboxWrapper","display","justifyContent","Login","dispatch","useDispatch","useState","setChecked","onHandleSubmit","a","setSubmitting","loginAsAdmin","loginUser","validationSchema","Yup","useEffect","document","title","Slide","direction","in","mountOnEnter","unmountOnExit","Grid","container","alignItems","initialValues","onSubmit","isSubmitting","handleSubmit","noValidate","Button","variant","CircularProgress"],"mappings":"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","file":"static/js/6.6ca60a7a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { FormControl, FormLabel, TextField } from \"@material-ui/core\";\r\nimport { useFormikContext } from \"formik\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formLabel: {\r\n    fontWeight: 600,\r\n    marginBottom: theme.spacing(1.5),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  isRegister?: boolean;\r\n};\r\n\r\ninterface IValues {\r\n  username: string;\r\n  email?: string;\r\n  password: string;\r\n}\r\n\r\nconst FormField: React.FC<Props> = ({ isRegister = false }): JSX.Element => {\r\n  const classes = useStyles();\r\n  const { values, handleChange, handleBlur, errors, touched } =\r\n    useFormikContext<IValues>();\r\n\r\n  return (\r\n    <>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <FormLabel classes={{ root: classes.formLabel }}>Username</FormLabel>\r\n        <TextField\r\n          fullWidth\r\n          name='username'\r\n          value={values.username}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          placeholder='Enter username'\r\n          helperText={touched.username ? errors.username : \"\"}\r\n          error={touched.username ? Boolean(errors.username) : false}\r\n        />\r\n      </FormControl>\r\n      {isRegister ? (\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <FormLabel classes={{ root: classes.formLabel }}>Email</FormLabel>\r\n          <TextField\r\n            fullWidth\r\n            name='email'\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            placeholder='Enter email'\r\n            helperText={touched.email ? errors.email : \"\"}\r\n            error={touched.email ? Boolean(errors.email) : false}\r\n          />\r\n        </FormControl>\r\n      ) : null}\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <FormLabel classes={{ root: classes.formLabel }}>Password</FormLabel>\r\n        <TextField\r\n          fullWidth\r\n          type='password'\r\n          name='password'\r\n          value={values.password}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          placeholder='Enter password'\r\n          helperText={touched.password ? errors.password : \"\"}\r\n          error={touched.password ? Boolean(errors.password) : false}\r\n        />\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst FormControlContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport default FormControlContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase, {\n  skipSx: true\n})(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  skipSx: true\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Slide,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginUser } from \"redux/actions/user\";\r\nimport { loginAsAdmin } from \"redux/actions/admin\";\r\nimport FormField from \"components/shared/FormField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100%\",\r\n    minHeight: \"100vh\",\r\n  },\r\n  card: {\r\n    padding: theme.spacing(6),\r\n    maxWidth: \"675px\",\r\n    margin: \"auto\",\r\n  },\r\n  btnLogin: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1.5, 3),\r\n  },\r\n  checkboxWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\ninterface IInitialValues {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst Login: React.FC = (): JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [checked, setChecked] = React.useState<boolean>(false);\r\n\r\n  const initialValues: IInitialValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const onHandleSubmit = async (\r\n    values: IInitialValues,\r\n    { setSubmitting }: any\r\n  ) =>\r\n    checked\r\n      ? dispatch(loginAsAdmin(values, setSubmitting))\r\n      : dispatch(loginUser(values, setSubmitting));\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    username: Yup.string().required(\"Invalid username!\"),\r\n    password: Yup.string().required(\"Invalid password!\"),\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    document.title = \"Login\";\r\n  }, []);\r\n\r\n  return (\r\n    <Slide direction='right' in={true} mountOnEnter unmountOnExit>\r\n      <Grid\r\n        container\r\n        className={classes.root}\r\n        direction='column'\r\n        alignItems='center'\r\n        justifyContent='center'\r\n      >\r\n        <Card className={classes.card} elevation={2}>\r\n          <CardContent>\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validationSchema={validationSchema}\r\n              onSubmit={onHandleSubmit}\r\n            >\r\n              {({ isSubmitting, handleSubmit }) => (\r\n                <form noValidate onSubmit={handleSubmit}>\r\n                  <FormField />\r\n                  <Button\r\n                    type='submit'\r\n                    variant='contained'\r\n                    color='primary'\r\n                    className={classes.btnLogin}\r\n                    disabled={isSubmitting}\r\n                  >\r\n                    {isSubmitting ? <CircularProgress size='1rem' /> : \"Submit\"}\r\n                  </Button>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n            <div className={classes.checkboxWrapper}>\r\n              <Checkbox\r\n                checked={checked}\r\n                onChange={handleChange}\r\n                inputProps={{ \"aria-label\": \"controlled\" }}\r\n              />\r\n              <p>Login As Admin</p>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}