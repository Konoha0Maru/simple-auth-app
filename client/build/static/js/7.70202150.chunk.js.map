{"version":3,"sources":["components/shared/FormField.tsx","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","pages/auth/Register.tsx"],"names":["useStyles","makeStyles","theme","formLabel","fontWeight","marginBottom","spacing","formControl","margin","FormField","isRegister","classes","useFormikContext","values","handleChange","handleBlur","errors","touched","fullWidth","className","root","name","value","username","onChange","onBlur","placeholder","helperText","error","Boolean","email","type","password","Card","React","props","ref","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","elevation","withStyles","overflow","CardContent","_props$component","component","Component","padding","paddingBottom","flexGrow","position","top","left","width","minHeight","card","maxWidth","btnLogin","marginTop","Register","dispatch","useDispatch","onHandleSubmit","a","setSubmitting","registerUser","validationSchema","Yup","required","useEffect","document","title","direction","in","mountOnEnter","unmountOnExit","container","alignItems","justifyContent","initialValues","onSubmit","isSubmitting","handleSubmit","noValidate","variant","color","disabled","size"],"mappings":"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","file":"static/js/7.70202150.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { FormControl, FormLabel, TextField } from \"@material-ui/core\";\r\nimport { useFormikContext } from \"formik\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formLabel: {\r\n    fontWeight: 600,\r\n    marginBottom: theme.spacing(1.5),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  isRegister?: boolean;\r\n};\r\n\r\ninterface IValues {\r\n  username: string;\r\n  email?: string;\r\n  password: string;\r\n}\r\n\r\nconst FormField: React.FC<Props> = ({ isRegister = false }): JSX.Element => {\r\n  const classes = useStyles();\r\n  const { values, handleChange, handleBlur, errors, touched } =\r\n    useFormikContext<IValues>();\r\n\r\n  return (\r\n    <>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <FormLabel classes={{ root: classes.formLabel }}>Username</FormLabel>\r\n        <TextField\r\n          fullWidth\r\n          name='username'\r\n          value={values.username}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          placeholder='Enter username'\r\n          helperText={touched.username ? errors.username : \"\"}\r\n          error={touched.username ? Boolean(errors.username) : false}\r\n        />\r\n      </FormControl>\r\n      {isRegister ? (\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <FormLabel classes={{ root: classes.formLabel }}>Email</FormLabel>\r\n          <TextField\r\n            fullWidth\r\n            name='email'\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            placeholder='Enter email'\r\n            helperText={touched.email ? errors.email : \"\"}\r\n            error={touched.email ? Boolean(errors.email) : false}\r\n          />\r\n        </FormControl>\r\n      ) : null}\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <FormLabel classes={{ root: classes.formLabel }}>Password</FormLabel>\r\n        <TextField\r\n          fullWidth\r\n          type='password'\r\n          name='password'\r\n          value={values.password}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          placeholder='Enter password'\r\n          helperText={touched.password ? errors.password : \"\"}\r\n          error={touched.password ? Boolean(errors.password) : false}\r\n        />\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Slide,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { registerUser } from \"redux/actions/user\";\r\nimport FormField from \"components/shared/FormField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100%\",\r\n    minHeight: \"100vh\",\r\n  },\r\n  card: {\r\n    padding: theme.spacing(6),\r\n    maxWidth: \"675px\",\r\n    margin: \"auto\",\r\n  },\r\n  btnLogin: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1.5, 3),\r\n  },\r\n}));\r\n\r\ninterface IInitialValues {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst Register: React.FC = (): JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const initialValues: IInitialValues = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const onHandleSubmit = async (\r\n    values: IInitialValues,\r\n    { setSubmitting }: any\r\n  ) => dispatch(registerUser(values, setSubmitting));\r\n\r\n  const validationSchema = Yup.object({\r\n    username: Yup.string().required(\"Invalid username!\"),\r\n    email: Yup.string().email(\"Invalid email!\").required(\"Invalid email!\"),\r\n    password: Yup.string().required(\"Invalid password!\"),\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    document.title = \"Register\";\r\n  }, []);\r\n\r\n  return (\r\n    <Slide direction='right' in={true} mountOnEnter unmountOnExit>\r\n      <Grid\r\n        container\r\n        className={classes.root}\r\n        direction='column'\r\n        alignItems='center'\r\n        justifyContent='center'\r\n      >\r\n        <Card className={classes.card} elevation={2}>\r\n          <CardContent>\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validationSchema={validationSchema}\r\n              onSubmit={onHandleSubmit}\r\n            >\r\n              {({ isSubmitting, handleSubmit }) => (\r\n                <form noValidate onSubmit={handleSubmit}>\r\n                  <FormField isRegister={true} />\r\n                  <Button\r\n                    type='submit'\r\n                    variant='contained'\r\n                    color='primary'\r\n                    className={classes.btnLogin}\r\n                    disabled={isSubmitting}\r\n                  >\r\n                    {isSubmitting ? <CircularProgress size='1rem' /> : \"Submit\"}\r\n                  </Button>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}